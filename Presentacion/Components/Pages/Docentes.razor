@page "/docentes"
@using Servicios.DTOs
@using ProyectoDeCero2.Servicios
@using Servicios
@inject IDocenteServicios DocenteServicios
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject NavigationManager NavManager

<div class="container-fluid px-4">
    <!-- Header de la página -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h3 class="fw-bold text-primary mb-1">Gestión de Docentes</h3>
            <p class="text-muted mb-0">Administra el personal docente del sistema</p>
        </div>
        <button class="btn btn-outline-secondary" @onclick="IrAHome">
            <i class="fas fa-home me-2"></i>Ir a Inicio
        </button>
    </div>

    <!-- Barra de herramientas -->
    <div class="card shadow-sm border-0 mb-4">
        <div class="card-body">
            <div class="row g-3 align-items-center">
                <div class="col-md-6">
                    <div class="input-group">
                        <span class="input-group-text bg-light border-end-0">
                            <i class="fas fa-search text-muted"></i>
                        </span>
                        <input type="text"
                               class="form-control border-start-0"
                               placeholder="Buscar por número, nombre o apellidos..."
                               @bind="busqueda"
                               @bind:event="oninput" />
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="d-flex gap-2 justify-content-md-end">
                        <button class="btn btn-outline-primary" @onclick="BuscarDocente">
                            <i class="fas fa-search me-2"></i>Buscar
                        </button>
                        <button class="btn btn-success" @onclick="CrearDocente">
                            <i class="fas fa-user-plus me-2"></i>Nuevo Docente
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Tabla de docentes -->
    @if (docentes == null)
    {
        <div class="card shadow-sm border-0">
            <div class="card-body text-center py-5">
                <div class="spinner-border text-primary mb-3" role="status">
                    <span class="visually-hidden">Cargando...</span>
                </div>
                <p class="text-muted mb-0">Cargando docentes...</p>
            </div>
        </div>
    }
    else if (!docentes.Any())
    {
        <div class="card shadow-sm border-0">
            <div class="card-body text-center py-5">
                <i class="fas fa-chalkboard-teacher fa-3x text-muted mb-3"></i>
                <h5 class="text-muted">No se encontraron docentes</h5>
                <p class="text-muted mb-4">No hay docentes que coincidan con tu búsqueda.</p>
                <button class="btn btn-primary" @onclick="CrearDocente">
                    <i class="fas fa-user-plus me-2"></i>Agregar primer docente
                </button>
            </div>
        </div>
    }
    else
    {
        <div class="card shadow-sm border-0">
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0">
                        <thead class="table-light">
                            <tr>
                                <th class="ps-4">N° Empleado</th>
                                <th>Docente</th>
                                <th>Contacto</th>
                                <th class="text-center">Estado</th>
                                <th class="text-center" style="width: 150px;">Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var docente in docentes)
                            {
                                <tr>
                                    <td class="ps-4">
                                        <span class="fw-bold text-primary font-monospace">@docente.NumeroEmpleadoDocente</span>
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="avatar-circle bg-primary text-white me-3">
                                                @GetInitials(docente.NombreDocente, docente.ApPatDocente, docente.ApMatDocente)
                                            </div>
                                            <div>
                                                <div class="fw-semibold">@docente.NombreDocente @docente.ApPatDocente @docente.ApMatDocente</div>
                                                <small class="text-muted">
                                                    @GetShortName(docente.NombreDocente, docente.ApPatDocente, docente.ApMatDocente)
                                                </small>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(docente.EmailDocente))
                                        {
                                            <div class="d-flex align-items-center">
                                                <i class="fas fa-envelope text-muted me-2"></i>
                                                <a href="mailto:@docente.EmailDocente" class="text-decoration-none">
                                                    @docente.EmailDocente
                                                </a>
                                            </div>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Sin email</span>
                                        }
                                    </td>
                                    <td class="text-center">
                                        <span class="badge @(docente.EstadoDocente ? "bg-success" : "bg-secondary") rounded-pill">
                                            <i class="fas @(docente.EstadoDocente ? "fa-check" : "fa-pause") me-1"></i>
                                            @(docente.EstadoDocente ? "Activo" : "Inactivo")
                                        </span>
                                    </td>
                                    <td class="text-center">
                                        <div class="btn-group btn-group-sm" role="group">
                                            <button class="btn btn-outline-primary"
                                                    @onclick="() => EditarDocente(docente.IdDocente)"
                                                    title="Editar docente">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <button class="btn btn-outline-danger"
                                                    @onclick="() => EliminarDocente(docente.IdDocente)"
                                                    title="Eliminar docente">
                                                <i class="fas fa-trash-alt"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Resumen estadístico -->
        <div class="row mt-4">
            <div class="col-md-4">
                <div class="card bg-primary text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h4 class="mb-0">@docentes.Count</h4>
                                <small>Total Docentes</small>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-users fa-2x opacity-50"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card bg-success text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h4 class="mb-0">@docentes.Count(d => d.EstadoDocente)</h4>
                                <small>Docentes Activos</small>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-check-circle fa-2x opacity-50"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card bg-secondary text-gray">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h4 class="mb-0">@docentes.Count(d => !d.EstadoDocente)</h4>
                                <small>Docentes Inactivos</small>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-pause-circle fa-2x opacity-50"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    }
</div>

<style>
    .avatar-circle {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        font-size: 14px;
    }
</style>

@code {
    private string busqueda = string.Empty;
    private List<DocenteDto> docentes;

    protected override async Task OnInitializedAsync()
    {
        await ObtenerTodosLosDocentesAsync();
    }

    private void CrearDocente()
    {
        NavigationManager.NavigateTo("/docentes/form");
    }

    private void EditarDocente(int IdDocente)
    {
        NavigationManager.NavigateTo($"/docentes/form/{IdDocente}");
    }

    private async Task BuscarDocente()
    {
        docentes = await DocenteServicios.BuscarDocenteAsync(busqueda);
    }

    private async Task ObtenerTodosLosDocentesAsync()
    {
        try
        {
            docentes = await DocenteServicios.ObtenerTodosLosDocentesAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al obtener todos los docentes: {ex.Message}");
        }
    }

    private async Task EliminarDocente(int idDocente)
    {
        var confirmacion = await JSRuntime.InvokeAsync<bool>("confirm", "¿Estás seguro de eliminar este docente?");
        if (confirmacion)
        {
            await DocenteServicios.EliminarDocenteAsync(idDocente);
            await ObtenerTodosLosDocentesAsync();
        }
    }

    private void IrAHome()
    {
        NavManager.NavigateTo("/");
    }

    private string GetInitials(string nombre, string apPat, string apMat)
    {
        var initials = "";
        if (!string.IsNullOrEmpty(nombre)) initials += nombre[0];
        if (!string.IsNullOrEmpty(apPat)) initials += apPat[0];
        return initials.ToUpper();
    }

    private string GetShortName(string nombre, string apPat, string apMat)
    {
        var parts = new List<string>();
        if (!string.IsNullOrEmpty(nombre)) parts.Add(nombre.Split(' ')[0]);
        if (!string.IsNullOrEmpty(apPat)) parts.Add(apPat);
        return string.Join(" ", parts);
    }
}