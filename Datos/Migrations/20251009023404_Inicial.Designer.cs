// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoDeCero2.Datos;

#nullable disable

namespace Datos.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20251009023404_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_CarreraE_PlanEstudio", b =>
                {
                    b.Property<int>("CarrerasIdCarrera")
                        .HasColumnType("int");

                    b.Property<int>("PlanesDeEstudioIdPlanEstudio")
                        .HasColumnType("int");

                    b.HasKey("CarrerasIdCarrera", "PlanesDeEstudioIdPlanEstudio");

                    b.HasIndex("PlanesDeEstudioIdPlanEstudio");

                    b.ToTable("CarreraPlanEstudio", (string)null);
                });

            modelBuilder.Entity("Entidades.E_Carrera", b =>
                {
                    b.Property<int>("IdCarrera")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCarrera"));

                    b.Property<string>("AliasCarrera")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaveCarrera")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoCarrera")
                        .HasColumnType("bit");

                    b.Property<int>("IdCoordinador")
                        .HasColumnType("int");

                    b.Property<string>("NombreCarrera")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCarrera");

                    b.ToTable("Carrera", (string)null);
                });

            modelBuilder.Entity("Entidades.E_Docente", b =>
                {
                    b.Property<int>("IdDocente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDocente"));

                    b.Property<string>("ApMatDocente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApPatDocente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailDocente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoDocente")
                        .HasColumnType("bit");

                    b.Property<string>("NombreDocente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroEmpleadoDocente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDocente");

                    b.ToTable("Docente", (string)null);
                });

            modelBuilder.Entity("Entidades.E_Materia", b =>
                {
                    b.Property<int>("IdMateria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMateria"));

                    b.Property<string>("BibliografiaBasicaMateria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BibliografiaCompletenciaMateria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CRMateria")
                        .HasColumnType("int");

                    b.Property<string>("ClaveMateria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompetenciaMateria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CriteriosMateria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoMateria")
                        .HasColumnType("bit");

                    b.Property<string>("EvidenciaMateria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HCLMateria")
                        .HasColumnType("int");

                    b.Property<int>("HCMateria")
                        .HasColumnType("int");

                    b.Property<int>("HEMateria")
                        .HasColumnType("int");

                    b.Property<int>("HLMateria")
                        .HasColumnType("int");

                    b.Property<int>("HPCMateria")
                        .HasColumnType("int");

                    b.Property<int>("HTMateria")
                        .HasColumnType("int");

                    b.Property<int?>("IdNivelAcademico")
                        .HasColumnType("int");

                    b.Property<string>("MetodologiaMateria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathPUAMateria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerfilDocente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropositoMateria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMateria");

                    b.HasIndex("IdNivelAcademico");

                    b.ToTable("Materia", (string)null);
                });

            modelBuilder.Entity("Entidades.E_NivelAcademico", b =>
                {
                    b.Property<int>("IdNivelAcademico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNivelAcademico"));

                    b.Property<string>("NombreNivelAcademico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdNivelAcademico");

                    b.ToTable("NivelAcademico", (string)null);
                });

            modelBuilder.Entity("Entidades.E_PlanEstudio", b =>
                {
                    b.Property<int>("IdPlanEstudio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPlanEstudio"));

                    b.Property<string>("CampoOcupacional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comentarios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreditosObligatorios")
                        .HasColumnType("int");

                    b.Property<int>("CreditosOptativos")
                        .HasColumnType("int");

                    b.Property<bool>("EstadoPlanEstudio")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("PerfilDeEgreso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerfilDeIngreso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanEstudio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalCreditos")
                        .HasColumnType("int");

                    b.HasKey("IdPlanEstudio");

                    b.ToTable("PlanEstudio", (string)null);
                });

            modelBuilder.Entity("E_CarreraE_PlanEstudio", b =>
                {
                    b.HasOne("Entidades.E_Carrera", null)
                        .WithMany()
                        .HasForeignKey("CarrerasIdCarrera")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.E_PlanEstudio", null)
                        .WithMany()
                        .HasForeignKey("PlanesDeEstudioIdPlanEstudio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entidades.E_Materia", b =>
                {
                    b.HasOne("Entidades.E_NivelAcademico", "NivelAcademico")
                        .WithMany("Materias")
                        .HasForeignKey("IdNivelAcademico")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("NivelAcademico");
                });

            modelBuilder.Entity("Entidades.E_NivelAcademico", b =>
                {
                    b.Navigation("Materias");
                });
#pragma warning restore 612, 618
        }
    }
}
